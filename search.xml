<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Quasar项目如何使用Electron打包</title>
      <link href="/posts/15bb80f9.html"/>
      <url>/posts/15bb80f9.html</url>
      
        <content type="html"><![CDATA[<h2 id="Quasar项目-Vite版-使用Electron开发、打包、发布"><a href="#Quasar项目-Vite版-使用Electron开发、打包、发布" class="headerlink" title="Quasar项目(Vite版)使用Electron开发、打包、发布"></a>Quasar项目(Vite版)使用Electron开发、打包、发布</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol start="0"><li><p>创建Vite版本的 Quasar 项目</p><p><img src="https://i0.hdslb.com/bfs/album/55188e884d46128893044a630cc5f8db83002ced.png" alt="image-20220906195333774"></p><p>文件目录：</p><p><img src="https://i0.hdslb.com/bfs/album/ea49ab7a3fb1dcb78fc8bbf98791cba259bf2342.png" alt="image-20220906195443520"></p></li><li><p>在项目根目录下安装最新的 Electron 模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># from the root of Quasar project</span></span><br><span class="line">$ <span class="built_in">cd</span> qua-vite</span><br><span class="line">$ npm install electron@latest</span><br><span class="line"><span class="comment"># or yarn upgrade electron@latest</span></span><br></pre></td></tr></table></figure><p><img src="https://i0.hdslb.com/bfs/album/9bd0d9b2fa68b7e2cbf39ae9f46cbb801248e6d7.png" alt="image-20220906144407784"></p></li><li><p>将 Electron 模块添加到 Quasar 项目中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ quasar mode add electron</span><br></pre></td></tr></table></figure><p><img src="https://i0.hdslb.com/bfs/album/6d329e2c9261c08f28b282752ce0b84c002406dc.png" alt="image-20220906145603323"></p><p>PS：</p><ol><li>该命令会安装一些 Electron 安装包，同时创建 <code>/src-electron</code> 安装包。</li><li>每个 Election APP 有两个线程：主线程（处理新创建的 <code>/src-electron</code> 文件中窗口和初始化代码）和渲染线程（处理 <code>/src</code> 中应用程序的实际内容）</li><li>如果在使用 <code>npm</code> 安装过程中出现错误：① 检查自己的 <code>npm</code> 版本是否过期；② 如果自己电脑上没有安装过像 Python、Visual Studio 等开发工具，需要安装相关Visual C++ 文件，可自行百度相关解决办法。</li></ol></li></ol><h3 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h3><p><strong>Windows桌面端</strong> ： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ quasar build</span><br></pre></td></tr></table></figure><p><img src="https://i0.hdslb.com/bfs/album/aa681f8492f623cd023a13331f448b47c2eb863f.png" alt="image-20220906195938513"></p><p><img src="https://i0.hdslb.com/bfs/album/59b5f9926b4ad754ba49c78fbc0fe6d7fc8df6ab.png" alt="image-20220906202043311"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ quasar dev -m electron</span><br><span class="line"></span><br><span class="line"><span class="comment"># passing extra parameters and/or options to</span></span><br><span class="line"><span class="comment"># underlying &quot;electron&quot; executable:</span></span><br><span class="line">$ quasar dev -m electron -- --no-sandbox --disable-setuid-sandbox</span><br><span class="line"><span class="comment"># when on Windows and using Powershell:</span></span><br><span class="line">$ quasar dev -m electron <span class="string">&#x27;--&#x27;</span> --no-sandbox --disable-setuid-sandbox</span><br></pre></td></tr></table></figure><p>​上述命令执行之后将会打开一个 带有开发工具的 Electron 窗口。该窗口的渲染进程具有“热更新”功能，并且对主进程的更改也会被检测到(但是会在每次更改时重新启动 Electron 窗口)</p><p><img src="https://i0.hdslb.com/bfs/album/faf9cb0529ae63b2df63d5467ccb923a1d7cb271.png" alt="image-20220906151016209"></p><p>PS：热更新，即前端代码发生变化，前端页面也会变化。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># if you want to also access Vue Devtools for the renderer thread:</span></span><br><span class="line">$ quasar dev -m electron --devtools</span><br></pre></td></tr></table></figure><p><img src="https://i0.hdslb.com/bfs/album/670f273d48093b60b1ada6a2e3d11cdbf53290ca.png" alt="image-20220906172222692"></p><p>PS：执行过程中遇到如下错误</p><p><img src="https://i0.hdslb.com/bfs/album/bf114dbda40e561eeac8409beee74bfdb1e93e9d.png" alt="image-20220906172337146"></p><p>解决方法：建议换源，重新执行命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm config <span class="built_in">set</span> ELECTRON_MIRROR http://npm.taobao.org/mirrors/electron/</span><br></pre></td></tr></table></figure><p><img src="https://i0.hdslb.com/bfs/album/3a1751b5932fc03b916718a5952c6ecb51947523.png" alt="image-20220906172511956"></p><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p><strong>Windows桌面端：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ quasar build -m electron</span><br><span class="line"></span><br><span class="line"><span class="comment"># ..or the longer form:</span></span><br><span class="line">$ quasar build --mode electron</span><br></pre></td></tr></table></figure><p><img src="https://i0.hdslb.com/bfs/album/b91effe7a79b2a0568e14d23aa773a59c5eb2e9b.png" alt="image-20220906200128209"></p><p><img src="https://i0.hdslb.com/bfs/album/4f9e367329fc438a300f6488d14721818142277f.png" alt="image-20220906202520531"></p><p>​上述命令可以将app项目打包成产品并且使用electron包将其打包成可执行文件。如果希望为 UI 代码启用调试的生产版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ quasar build -m electron -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># ..or the longer form</span></span><br><span class="line">$ quasar build -m electron --debug</span><br></pre></td></tr></table></figure><h3 id="发布-学习中…"><a href="#发布-学习中…" class="headerlink" title="发布 - 学习中…"></a>发布 - 学习中…</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ quasar build -m electron -P always</span><br><span class="line"></span><br><span class="line"><span class="comment"># ..or the longer form:</span></span><br><span class="line">$ quasar build --mode electron --publish always</span><br></pre></td></tr></table></figure><p><img src="https://i0.hdslb.com/bfs/album/7d1c8d4c94a0388748686a5d9c31e4c893bf790f.png" alt="image-20220906193519004"></p><p>​使用 <code>electron-builder</code> 来构建app。可以直接使用命令行(–bundler builder) 或 直接在 <code>quasar.config.js</code> 中 <code>electron.bundler</code> 部分设置。<em><strong>在使用 electron-packager 时这个方法是无效的</strong></em>。<img src="https://i0.hdslb.com/bfs/album/5685ea7e8db762cbebaee9e70436d2ad7187bf39.png" alt="image-20220906200341265"></p><p>​合法的 <code>-P</code> 有 “onTag”, “onTagOrDraft”, “always” 和 “never”，另外 <code>quasar.config.js</code> 中的 <code>electron.builder</code> 必须具有有效的发布配置说明。</p><p>​将 Windows EXE 安装文件发布到 Amazon S3的一个非常基本的配置如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// quasar.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="attr">electron</span>: &#123;</span><br><span class="line">  <span class="attr">bundler</span>: <span class="string">&#x27;builder&#x27;</span>, <span class="comment">// set here instead of using command line flag --bundler</span></span><br><span class="line">  <span class="attr">builder</span>: &#123;</span><br><span class="line">    <span class="attr">appId</span>: <span class="string">&#x27;com.electron.myelectronapp&#x27;</span>,</span><br><span class="line">    <span class="attr">win</span>: &#123;</span><br><span class="line">      <span class="attr">target</span>: <span class="string">&#x27;nsis&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">publish</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;provider&#x27;</span>: <span class="string">&#x27;s3&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;bucket&#x27;</span>: <span class="string">&#x27;myS3bucket&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i0.hdslb.com/bfs/album/90ac4c8f1b9632a0db4a71863d7507af60728cfa.png" alt="image-20220906201630927"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Quasar开发 </tag>
            
            <tag> Vite </tag>
            
            <tag> Electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown简单使用</title>
      <link href="/posts/87c20598.html"/>
      <url>/posts/87c20598.html</url>
      
        <content type="html"><![CDATA[<p>1.高亮: &#x3D;&#x3D;文字&#x3D;&#x3D;<br>2.标题: #文字 ##文字 ###文字 最多支持6级的标题<br>3.加粗: <strong>文字</strong><br>4.斜体: <em>文字</em><br>5.上标: ^文字^<br>6.下标: <del>文字</del><br>7.列表: +文字   在+号前加两个空格可以实现下一级列表<br>8.表格: </p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| 文字 | 文字 | 文字 |</span><br><span class="line">| ---- | ---- | ---- |</span><br><span class="line">| 文字 | 文字 | 文字 |</span><br></pre></td></tr></table></figure><p>9.引用: &gt;文字 &gt;&gt;文字 &gt;&gt;&gt;文字    打几个就可以实现几级的引用<br>10.代码框:  ‘文字’    ‘’’ 文字’’’</p><p>&#x3D;&#x3D;（1）标题&#x3D;&#x3D;</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><p>&#x3D;&#x3D;（2）字体&#x3D;&#x3D;</p><p><strong>加粗</strong></p><p><em>斜体</em></p><p><em><strong>斜体加粗</strong></em></p><p><del>删除线</del> </p><p>&#x3D;&#x3D;高亮&#x3D;&#x3D;</p><p>我是^上标^</p><p>我是<del>下标</del></p><p>&#x3D;&#x3D;（3）列表&#x3D;&#x3D;</p><ul><li>一二三四五<ul><li>上山打老虎<ul><li>老虎没打到<ul><li>打到小松鼠</li></ul></li></ul></li></ul></li></ul><p>1.一二三四五</p><p>2.上山打老虎</p><p>3.老虎没打到</p><p>4.打到小松鼠</p><p>&#x3D;&#x3D;（4）表格&#x3D;&#x3D;</p><table><thead><tr><th align="center">Mon</th><th align="center">Tue</th><th align="center">WED</th><th align="center">THU</th><th align="center">FRI</th></tr></thead><tbody><tr><td align="center">上山</td><td align="center">上山</td><td align="center">上山</td><td align="center">上山</td><td align="center">上山</td></tr><tr><td align="center">打老虎</td><td align="center">打老虎</td><td align="center">打老虎</td><td align="center">打老虎</td><td align="center">打老虎</td></tr></tbody></table><p>&#x3D;&#x3D;（5）引用&#x3D;&#x3D;</p><blockquote><p>一二三四五 </p></blockquote><blockquote><blockquote><p>上山打老虎 </p></blockquote></blockquote><blockquote><blockquote><blockquote><p>老虎没打到 </p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><blockquote><p>打到小松鼠</p></blockquote></blockquote></blockquote></blockquote><p>&#x3D;&#x3D;（6）分割线&#x3D;&#x3D;</p><hr><p>&#x3D;&#x3D;（7）代码&#x3D;&#x3D;</p><p><code>这是代码</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我是代码框</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="Test-GitHub-Auto"><a href="#Test-GitHub-Auto" class="headerlink" title="Test GitHub Auto"></a>Test GitHub Auto</h3><pre><code>E:\6.Blog\source\img\HelloWorld\helloworld.png</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Typora+Bilibili免费图床方法</title>
      <link href="/posts/85bf8f13.html"/>
      <url>/posts/85bf8f13.html</url>
      
        <content type="html"><![CDATA[<h1 id="Typora-Bilibili免费图床方法"><a href="#Typora-Bilibili免费图床方法" class="headerlink" title="Typora+Bilibili免费图床方法"></a>Typora+Bilibili免费图床方法</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>​在使用Typora写完博客时，需要发布到自己的主站（Github、csdn等）时，会发现发布之后<strong>照片损坏失效或加载速度很慢</strong>。如何解决这个问题呢？</p><p>​目前有很多方法可以解决此类问题，普遍是选择上传图片，上传到Github服务器，但这种方法有时候图片加载很慢。同时目前gitee公开的仓库需要审查，很不方便。</p><p>​依照这个思路，找到了一个可以将图片上传到bilibili服务器的方法。准所周知，b站看*指日可待，但永远不会倒闭。所以，该方法免费且快！</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>​Windows 10Typora 0.9.86</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h4 id="1-准备"><a href="#1-准备" class="headerlink" title="1.准备"></a>1.准备</h4><ul><li><p>去GitHub下载插件<a href="https://github.com/xlzy520/typora-plugin-bilibili![%E6%8F%92%E4%BB%B6%E4%BB%93%E5%BA%93](https://i0.hdslb.com/bfs/album/19ce68a352dd910d830935497d16e4dd932cf261.png)">https://github.com/xlzy520/typora-plugin-bilibili![插件仓库](https://i0.hdslb.com/bfs/album/19ce68a352dd910d830935497d16e4dd932cf261.png)</a></p><p>下载完成后，解压文件中的 <code>main.exe</code> 文件，将其解压到你指定文件目录底下（<strong>这个文件目录很重要后续会使用到，且目录文件中不能含有空格</strong>），建议将其放在Typora同目录下。我将其放在了 <code>D:\mingw64\picgo</code> 之下（不要问，问就是Typora安装路径上有空格文件！！）</p><p><img src="https://i0.hdslb.com/bfs/album/a9a79da2e7d83e483d2d91ed300cc5a3b1bdca02.png" alt="image-20220829001142563"></p></li><li><p>网页端打开 <code>bilibili</code> 官网，登录自己的账号之后，然后按 <code>F12</code>（或者 <code>Fn+F12</code> ），进行如下操作，复制 <code>SESSDATA</code> 。<img src="https://i0.hdslb.com/bfs/album/2a28618f4fa98da8b21ce51eabd792f8a1e857a7.png" alt="image-20220829003252822"></p></li></ul><h4 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h4><ul><li><p>打开 <code>Typora</code> 软件，进行如下操作：</p><p><img src="https://i0.hdslb.com/bfs/album/8d93e28a9177124ac8cbfb655457fda0002791f2.png" alt="Typora界面"></p><p><img src="https://i0.hdslb.com/bfs/album/36d32f9258778a1c07c8677699683132de335323.png" alt="image-20220829002808222"></p></li><li><p>将 <code>main.exe</code> 的目录地址 <code>bilibili</code> 网页端拿到的 <code>SESSDATA</code> 码进行组合，格式如下：<code>D:\mingw64\picgo\main.exe token=0dd3e50****(这是自己的SESSDATA码)</code> ，将组合后的字符串放到 <code>偏好设置\图像\上传服务器设定\自定义命令</code> 中，如下图所示：<img src="https://i0.hdslb.com/bfs/album/b4a3c84ef9c8831d533ab0c3b2be19be94264943.png" alt="image-20220829004039538"></p></li></ul><h4 id="3-完成"><a href="#3-完成" class="headerlink" title="3.完成"></a>3.完成</h4><p>​完成上述配置步骤后，点击 <code>验证图片上传选项</code> 验证是否配置成功，如下图为配置成功显示内容。<img src="https://i0.hdslb.com/bfs/album/573cfa3d63a97c6ec022b850d2374b477492d40b.png" alt="image-20220829004250253"></p><p>​<strong>！！重点 重点！！</strong></p><p>​上述配置完成之后，若发布到自己博客上之后还是无法显示照片时，需要在自己搭建博客的 html页面增加 <code>&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;</code> 那么全站资源引用不会携带 <code>referrer</code> 。比如我需要在自己博客主题配置文件 <code>_config.butterfly.yml</code> 配置文件中添加代码。<img src="https://i0.hdslb.com/bfs/album/be35b43b5205763050720de6f6bcdab4bcfdb96a.png" alt="image-20220829101614441"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>​本片博客主要解决了Typora使用中图片失效或加载速度慢的问题，主要使用了 <code>Custom Command</code> 方法解决这一问题。除此之外，还可以使用 PicGo(App) 的方法来解决这一问题，此篇博客不再赘述，有需要的小伙伴可自行搜索。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Bilibili </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://cdn.cbd.int/anzhiyu-blog@latest/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://cdn.cbd.int/anzhiyu-blog@latest/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: 'ZhuZiAYuanJWD';  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: 'iconfont' !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  .bangumi-active {    background: #dbecfe !important;    border-radius: 10px !important;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: #dbecfe !important;    border-radius: 10px !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme='dark'] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme='dark'] .card-widget {    background: #121212 !important;  }    [data-theme='dark'] div#post {    background: #121212 !important;  }    [data-theme='dark'] div#tag {    background: #121212 !important;  }    [data-theme='dark'] div#archive {    background: #121212 !important;  }    [data-theme='dark'] div#page {    background: #121212 !important;  }    [data-theme='dark'] div#category {    background: #121212 !important;  }    [data-theme='dark'] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #49b1f5;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #49b1f5;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* 鼠标图标 */  /* body {    cursor: url('/img/x1.cur'), auto;  }  a,  [type='button']:not(:disabled),  [type='reset']:not(:disabled),  [type='submit']:not(:disabled),  button:not(:disabled) {    cursor: url('/img/x2.cur'), auto !important;  } */  /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #49b1f5;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--heo-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }  ]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
